---
import BaseLayout from "@/layouts/BaseLayout.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import { getCollection } from "astro:content";

// Assuming you have a collection named "events"
const events = await getCollection("events", ({ data }) => {
  return import.meta.env.PROD ? data.draft !== true : true;
});

// Sort events by date, ensuring future events are listed first
const sortedEvents = events.sort((a, b) => {
  const aDate = new Date(a.data.date);
  const bDate = new Date(b.data.date);
  return aDate - bDate;
}).filter(event => new Date(event.data.date) >= new Date());

---

<BaseLayout title="Upcoming Events" description="Things I'm doing/looking forward to.">
  <header class="pb-8 pt-40 border-b border-primary">
    <h1 class="font-semibold">Upcoming Events&nbsp;&not;</h1>
    <p class="text-secondary text-pretty mt-1">
      Things I'm doing/looking forward to.
    </p>
  </header>
  <br>
    {
      sortedEvents.map((event, index) => {
        const expandId = `expand-event-${index}`;
        return (
          <article key={expandId} class="event-container">
            <label for={expandId} class="grid-label" style="display: block;">
              <span class="date-spacer">
                <FormattedDate
                  date={new Date(event.data.date)}
                  class="text-secondary tabular-nums"
                />
              </span>
              <h2 style="display: inline; margin: 0;">{event.data.title}</h2>
            </label>
            <input type="checkbox" id={expandId} class="grid-toggle" />
            <div class="grid">
              <div class="grid-inner">
                <p>Location: {event.data.location}</p>
                <p>Details: {event.data.details}</p>
                <div class="prose">
                  <p>{event.content}</p>
                </div>
              </div>
            </div>
          </article>
        );
      })
    }
  </section>
</BaseLayout>