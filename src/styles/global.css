@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "Geist Sans";
  src: url("/fonts/GeistVariableVF.woff2") format("woff2");
  font-display: swap;
  font-weight: 400 600;
}

@font-face {
  font-family: "Geist Mono";
  src: url("/fonts/GeistMonoVariableVF.woff2") format("woff2");
  font-display: swap;
  font-weight: 400;
}

@layer base {
  :root {
    --page-primary: theme(colors.white);
    --text-color-primary: theme(colors.neutral.700);
    --text-color-secondary: theme(colors.neutral.500);
    --text-color-subtle: theme(colors.neutral.300);
    --border-color-primary: theme(colors.neutral.200);
    --decoration-color-subtle: theme(colors.neutral.300);
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --page-primary: theme(colors.neutral.900);
      --text-color-primary: theme(colors.neutral.100);
      --text-color-secondary: theme(colors.neutral.400);
      --text-color-subtle: theme(colors.neutral.500);
      --border-color-primary: theme(colors.neutral.700);
      --decoration-color-subtle: theme(colors.neutral.500);
    }
  }

  html {
    font-size: 0.875rem;
  }
}

@layer components {
  .prose :where(* + *) {
    @apply mt-4;
  }

  .prose :where(h2, h3) {
    @apply font-semibold scroll-mt-4;
  }

  .prose :where(* + h2, * + h3) {
    @apply mt-8;
  }

  .prose :where(a) {
    @apply underline decoration-[var(--decoration-color-subtle)] hover:decoration-green-500 decoration-[0.1071428571rem];
  }

  .prose :where(strong) {
    @apply font-semibold;
  }

  .prose :where(ul) {
    @apply pl-6 space-y-0.5 list-square marker:text-[var(--text-color-subtle)];
  }

  .prose :where(ul li ul) {
    @apply mt-0.5;
  }

  .prose :where(code),
  .prose :where(kbd) {
    @apply bg-neutral-100 dark:bg-neutral-800 py-px px-1 rounded;
  }

  .prose :where(pre) {
    @apply !bg-neutral-100 dark:!bg-neutral-800 text-sm rounded p-4;
  }

  .prose :where(dl) {
    @apply grid grid-cols-[max-content_minmax(0,1fr)] -my-2;
  }

  .prose :where(dt) {
    @apply m-0 pr-8 py-2 [&:not(:first-of-type)]:border-t [&:not(:first-of-type)]:border-primary [&:not(:first-of-type)]:border-dashed text-secondary;
  }

  .prose :where(dd) {
    @apply m-0 py-2 col-start-2 [&:not(:first-of-type)]:border-t [&:not(:first-of-type)]:border-primary [&:not(:first-of-type)]:border-dashed;
  }

  .prose :where(blockquote) {
    @apply border-l-2 border-primary pl-4;
  }

  .prose :where(table) {
    @apply w-full;
  }

  .prose :where(tr:not(:last-child) > td) {
    @apply pb-2;
  }

  .prose :where(th) {
    @apply pb-2 font-semibold;
  }

  .prose :where(th:not([align="right"])) {
    @apply text-left;
  }

  .prose :where(td) {
    @apply pt-2 border-t border-dashed border-primary;
  }

  .prose :where(td[align="right"]) {
    @apply font-mono text-secondary;
  }

  /* Loading screen */

@font-face {
    font-family: 'PixelNES';
    src: url('/fonts/PixelNES.otf') format('opentype');
    font-weight: normal;
    font-style: normal;
}

.loading-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: black;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-family: 'PixelNES', monospace;
    font-size: 20px;
    visibility: visible;
    opacity: 1;
    transition: visibility 0.5s, opacity 0.5s linear;
    z-index: 1000; /* Ensure it's above other content */
}

/* blinking cursor for loading screen */

@keyframes blink {
  from, to { opacity: 1; }
  50% { opacity: 0; }
}

.cursor {
  display: inline-block;
  margin-left: 0.2em;
  background-color: white;
  width: 2px; /* Adjust based on your preference */
  height: 1em; /* Adjust to match the font size */
  vertical-align: bottom;
  animation: blink 1s infinite;
}

/* Hide the actual checkbox */
.grid-toggle {
  display: none;
}

/* Initial state of the grid is collapsed */
.grid {
  display: grid;
  grid-template-rows: 0fr; /* Start collapsed */
  transition: grid-template-rows 0.5s ease-in-out; /* Animation */
}

/* The grid inner container */
.grid-inner {
  overflow: hidden; /* Hide the overflow content when collapsed */
}

/* When the checkbox is checked, target the .grid container and expand it */
.grid-toggle:checked + .grid {
  grid-template-rows: 1fr; /* Expand to full row height */
}

/* Style for the label which acts as the "button" */
.grid-label {
  /* Add button-like styles here */
  cursor: pointer;
  /* Other styling properties */
}

.label-flex-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.event-title, .event-date {
  margin: 0;
}

.event-flex-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.date-spacer::after {
  content: '';
  display: inline-block;
  width: 10px; /* Adjust this value to increase or decrease the space */
}

/* Add this inside your @layer components in global.css */



}
